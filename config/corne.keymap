
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DFT 0
#define DSK 1
#define WMK 2
#define NBC 3
#define NVW 4
#define NVM 5
#define FU 6

/ {
    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
                  &lt DSK TAB     &kp Q        &kp W        &kp E        &kp R        &kp T         &kp Y        &kp U        &kp I        &kp O        &kp P        &kp BSPC    
                  &mo NVW      &kp A        &kp S        &kp D        &kp F        &kp G         &kp H        &kp J        &kp K        &kp L        &kp SEMI     &kp SQT     
                  &kp LSHFT    &kp Z        &kp X        &kp C        &kp V        &kp B         &kp N        &kp M        &kp COMMA    &kp DOT      &kp FSLH     &kp ESC     
                                                         &mt LALT LC(UP)   &kp LGUI     &lt NBC SPACE    &kp RET      &mo FU       &kp LCTRL   
            >;
        };
        tab_layer {
            bindings = <
                  &trans       &trans       &trans       &trans       &trans       &trans        &trans       &trans       &trans       &trans       &trans       &trans      
                  &trans       &trans       &trans       &trans       &trans       &trans        &trans       &trans       &trans       &trans       &trans       &trans      
                  &trans       &trans       &trans       &trans       &trans       &trans        &trans       &trans       &trans       &trans       &trans       &trans      
                                                         &kp LC(LEFT)    &kp LC(RIGHT)   &trans        &trans       &trans       &trans      
            >;
        };
        winmask_layer {
            bindings = <
                  &trans       &trans       &trans       &trans       &trans       &trans        &trans       &trans       &trans       &trans       &trans       &trans      
                  &mo NVM      &trans       &trans       &trans       &trans       &trans        &trans       &trans       &trans       &trans       &trans       &trans      
                  &trans       &trans       &trans       &trans       &trans       &trans        &trans       &trans       &trans       &trans       &trans       &trans      
                                                         &trans       &trans       &trans        &trans       &trans       &trans      
            >;
        };
        space_layer {
            bindings = <
                  &trans       &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT     &kp CARET    &kp AMPS     &kp KP_MULTIPLY   &kp LPAR     &kp RPAR     &kp BSPC    
                  &trans       &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp NUMBER_5       &kp MINUS    &kp EQUAL    &kp BSLH     &kp LBKT     &kp RBKT     &kp GRAVE   
                  &trans       &kp NUMBER_6      &kp NUMBER_7      &kp NUMBER_8      &kp NUMBER_9      &kp NUMBER_0       &kp UNDER    &kp PLUS     &kp PIPE     &kp LBRC     &kp RBRC     &kp TILDE   
                                                          &kp LGUI    &trans       &kp SPACE     &kp RET      &trans       &kp RALT    
            >;
        };
        caps_layer_win {
            bindings = <
                  &trans       &kp C_PP     &kp C_PREV   &kp C_NEXT   &kp CAPS     &kp C_AC_REFRESH     &kp PG_UP    &kp LG(LEFT)    &kp UP       &kp LG(RIGHT)   &kp PG_DN    &trans      
                  &mo NVM      &kp C_VOL_DN   &kp C_VOL_UP     &kp LG(LS(NUMBER_4))      &kp LG(LS(NUMBER_5))      &trans        &kp LA(LEFT)    &kp LEFT     &kp DOWN     &kp RIGHT    &kp LA(RIGHT)   &kp DEL     
                  &trans       &trans       &trans       &trans       &trans      &tog WMK       &trans       &kp LC(MINUS)   &trans       &kp LC(PLUS)    &trans       &trans      
                                                         &trans       &trans       &trans        &trans       &none        &trans      
            >;
        };
        caps_layer_mac {
            bindings = <
                  &trans       &kp C_PP     &kp C_PREV   &kp C_NEXT   &kp CAPS     &kp C_AC_REFRESH     &kp PG_UP    &kp HOME     &kp UP       &kp END      &kp PG_DN    &trans      
                  &mo NVM      &kp C_VOL_DN   &kp C_VOL_UP     &kp LG(LS(NUMBER_4))      &kp LG(LS(NUMBER_5))      &trans        &kp LG(LEFT)    &kp LEFT     &kp DOWN     &kp RIGHT    &kp LG(RIGHT)   &kp DEL     
                  &trans       &trans       &trans       &trans       &trans       &tog WMK      &trans       &kp LC(MINUS)   &trans       &kp LC(PLUS)    &trans       &trans      
                                                         &trans       &trans       &trans        &trans       &none        &trans      
            >;
        };
        r2_layer {
            bindings = <
                  &ext_power EP_OFF     &trans       &trans       &trans       &trans       &trans        &bt BT_CLR    &trans       &kp UP       &trans       &out OUT_BLE    &bt BT_SEL 0  
                  &kp F12      &kp F1       &kp F2       &kp F3       &kp F4       &kp F5        &trans       &kp LEFT     &kp DOWN     &kp RIGHT    &out OUT_USB    &bt BT_SEL 1  
                  &kp F11      &kp F6       &kp F7       &kp F8       &kp F9       &kp F10       &trans       &kp LC(MINUS)   &trans       &kp LC(PLUS)    &trans       &bt BT_SEL 2  
                                                         &kp F11      &kp RGUI     &kp LG(SPACE)    &trans       &trans       &trans      
            >;
        };
    };
};
    